import{r as e}from"./vendor.5a5c2a9a.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const t=e({extensions:"OES_texture_float",pixelRatio:null!=(n=window.devicePixelRatio)?n:1});var n;const i={x:0,y:0,buttons:0};window.addEventListener("mousemove",(e=>{i.x=e.clientX,i.y=e.clientY,i.buttons=e.buttons})),window.addEventListener("mousedown",(e=>{i.x=e.clientX,i.y=e.clientY,i.buttons=e.buttons})),window.addEventListener("mouseup",(e=>{i.x=e.clientX,i.y=e.clientY,i.buttons=e.buttons})),window.addEventListener("touchmove",(e=>{i.x=e.changedTouches[0].clientX,i.y=e.changedTouches[0].clientY,i.buttons=e.touches.length})),window.addEventListener("touchstart",(e=>{i.x=e.changedTouches[0].clientX,i.y=e.changedTouches[0].clientY,i.buttons=e.touches.length})),window.addEventListener("touchend",(e=>{i.x=e.changedTouches[0].clientX,i.y=e.changedTouches[0].clientY,i.buttons=e.touches.length}));const o=256;let s=64,a=64;const r=Array(16384).fill(0).map((()=>Math.random()>.9?255:0)),c=Array(3).fill().map((()=>t.texture({width:64,height:64,data:r,wrap:"repeat"}))),l=c.map((e=>t.framebuffer({color:e,depthStencil:!1}))),p=t({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n\n    uniform float sshapeX, sshapeY;\n    varying vec2 uv;\n    void main() {\n      vec3 n = vec3(0.0);\n      for(int dx=-1; dx<=1; ++dx)\n      for(int dy=-1; dy<=1; ++dy) {\n        n += texture2D(prevState, uv+vec2(dx,dy)/vec2(sshapeX,sshapeY)).rgb;\n      }\n      vec3 s = texture2D(prevState, uv).rgb;\n      float l=1.0;\n      vec3 ns=s*(1.0-l)+l*(n/9.0);\n      vec3 col=vec3(max(ns*0.995,0.0));\n      gl_FragColor = vec4(col,1);\n    }",framebuffer:({tick:e},{outI:t})=>l[t]}),v=t({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n        vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:e},{inI:t})=>l[t],sshapeX:()=>a,sshapeY:()=>s},depth:{enable:!1},count:3}),d=t({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n      vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:e},{inI:t})=>l[t]},depth:{enable:!1},framebuffer:({tick:e},{outI:t})=>l[t],count:3}),u=Array(2).fill().map((()=>t.framebuffer({radius:o,colorType:"float",depthStencil:!1}))),h=t({vert:"\n    precision mediump float;\n    attribute vec2 position;\n    void main () {\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    uniform sampler2D state;\n    uniform sampler2D substrate;\n    uniform float shapeX, shapeY, deltaT, gravity;\n\n    uniform float sshapeX, sshapeY;\n    void main () {\n      vec2 shape = vec2(shapeX, shapeY);\n      vec4 prevState = texture2D(state,\n        gl_FragCoord.xy / shape);\n      vec2 position = prevState.xy;\n      vec2 velocity = prevState.zw;\n      position += 0.5 * velocity * deltaT/vec2(sshapeX,sshapeY)*max(sshapeX,sshapeY);\n      if (position.x < -1.0 || position.x > 1.0) {\n        velocity.x =-abs(velocity.x)*sign(position.x);\n       //position.x =mod(mod(position.x*0.5+0.5,1.0)+1.0,1.0)*2.0-1.0;\n      }\n      if (position.y < -1.0 || position.y > 1.0) {\n       velocity.y =-abs(velocity.y)*sign(position.y);\n       // position.y =mod(mod(position.y*0.5+0.5,1.0)+1.0,1.0)*2.0-1.0;\n      }\n      vec2 dm=vec2(0.0);\n      float brim=-1.0;\n      for(int da=-2; da<=2; ++da){\n          float aa=float(da)/8.0*3.1415926535*2.0+atan(velocity.y,velocity.x);\n          vec2 dp=vec2(cos(aa),sin(aa));\n        if(dot(dp,velocity)>=0.0*length(velocity)){\n        float bri=(length(texture2D(substrate, position/2.0+0.5+(dp*(10.0+100.0*(0.5+position.y*0.5))+vec2(0.0,0.0))/vec2(sshapeX,sshapeY)).rgb)+1.0)*\n        ((1.0*(0.25+(0.5+position.y*0.0)*0.75))*(sin(mod(position.x,sin(float(da)+position.y*100000.0)*0.01)*1000000.0)/2.0+0.5)>0.8?1000.0:1.0);//*dot(dp,velocity);\n        if(bri>brim){\n        dm=(dp-normalize(velocity))*bri/max(sshapeX,sshapeY);\n        brim=bri;\n        }\n        }\n    }\n      \n     //velocity.xy=length(velocity)>0.0?normalize(velocity):vec2(0.0);\n     float ddg=length(dm);\n      velocity.xy+=dm*max(1.0,brim)*0.1;//normalize(dm)*max(ddg,1.0/max(sshapeX,sshapeY))/10.0;\n      //velocity.xy*=0.95;\n      float an=0.01;//+(position.y*0.5+0.5)*0.5;\n     velocity.xy+=an*(length(velocity)>0.0?normalize(velocity)/max(sshapeX,sshapeY):vec2(0.0));\n     velocity.xy*=1.0/(1.0+an);\n      position += 0.5 * velocity * deltaT/vec2(sshapeX,sshapeY)*max(sshapeX,sshapeY);\n     velocity.y = velocity.y + gravity * deltaT;\n      gl_FragColor = vec4(position, velocity);\n    }\n    ",depth:{enable:!1},framebuffer:({tick:e},{t:t})=>u[(t+1)%2],uniforms:{state:({tick:e},{t:t})=>u[t%2],substrate:({tick:e})=>l[0],shapeX:t.context("viewportWidth"),shapeY:t.context("viewportHeight"),sshapeX:()=>a,sshapeY:()=>s,deltaT:2,gravity:0},attributes:{position:[0,-4,4,4,-4,4]},primitive:"triangles",elements:null,offset:0,count:3}),m=t({vert:"\n    precision highp float;\n    attribute vec2 sprite;\n    uniform sampler2D state;\n    uniform float N;\n    varying vec3 rg;\n    uniform float sshapeX, sshapeY;\n    void main () {\n        vec4 sss=texture2D(state, sprite);\n        vec4 sss2=texture2D(state, sprite+vec2(0.0,1.0/N).yx);\n\n        vec4 sss3=texture2D(state, sprite-vec2(0.0,1.0/N).yx);\n      vec2 position =sss.xy;\n      gl_PointSize = 1.0;\n      float gg=((length(sss.zw)-min(length(sss2.zw),min(length(sss.zw),length(sss3.zw))))/\n      max(abs(length(sss3.zw)-length(sss2.zw)),max(abs(length(sss3.zw)-length(sss.zw)),abs(length(sss.zw)-length(sss2.zw))))\n      );\n     float ggy=gg;\n      float a=length(sss.zw)*10.0*max(sshapeX,sshapeY);//(ggy-0.5)*10000000.0+0.50+sin(atan(sss.w,sss.z)*2.0)*0.0;//0.5+log(ggy/(1.0-ggy))*0.1;//(length(sss.zw)*max(sshapeX,sshapeY)/20.0)*2.0+sin(atan(sss.w,sss.z)*2.0)*0.0;\n      rg = normalize(vec3(sin(a),sin(a+3.1415926535*2.0/3.0),sin(a+3.1415926535*4.0/3.0))/2.0+0.5);\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    varying vec3 rg;\n    void main () {\n      gl_FragColor = vec4(rg, 1.0);\n    }\n    ",attributes:{sprite:Array(o*o).fill().map((function(e,t){return[t%o/o,(t/o|0)/o]})).reverse()},uniforms:{state:({tick:e},{t:t})=>u[t%2],N:({tick:e},{t:t})=>o,substrate:({tick:e},{inI:t})=>l[t],sshapeX:()=>a,sshapeY:()=>s},primitive:"points",blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one minus src alpha",dstAlpha:"one minus src alpha"}},offset:(e,{count:t})=>o*o-t,elements:null,count:t.prop("count"),framebuffer:({tick:e},{outI:t})=>l[t]});let f=0;const g={data:new Float32Array(256),width:64,height:1},y=document.createElement("div");function x(e,t,n){return Math.min(Math.max(2*n*e/t-1,-.999),.999)}Object.assign(y.style,{color:"white",position:"absolute",left:"20px",top:"20px","z-index":20}),document.body.appendChild(y);let b=0;t.frame((({tick:e,drawingBufferWidth:n,drawingBufferHeight:r,pixelRatio:w})=>{const X=x(i.x,n,w),Y=-x(i.y,r,w);let z=window.innerWidth/w,S=window.innerHeight/w;z===a&&S===s||(c.forEach(((e,t)=>l[t]({color:e({width:z,height:S})}))),a=z,s=S),i.buttons;for(let t=0;t<64;++t)g.data[4*t]=X,g.data[4*t+1]=Y,g.data[4*t+2]=.25*(Math.random()-.5),g.data[4*t+3]=.25*(Math.random()-.5);u[e%2].color[0].subimage(g,f%o,(f/o|0)%o),f+=64,y.innerText=Math.min(f,o*o);for(let i=0;i<10;i++)h({t:b}),t.clear({color:[0,0,0,1],depth:1}),v({inI:0},(()=>{t.draw(),p({outI:1})})),v({inI:1},(()=>{t.draw(),p({outI:0})})),d({inI:1,outI:0},(()=>{t.draw(),m({t:b,outI:0,inI:1,count:Math.min(f,o*o)})})),b+=1}));
