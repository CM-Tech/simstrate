var t=Object.defineProperty,e=(e,n,i)=>(((e,n,i)=>{n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i})(e,"symbol"!=typeof n?n+"":n,i),i);import{r as n,G as i}from"./vendor.518f2100.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const n of t)if("childList"===n.type)for(const t of n.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),"use-credentials"===t.crossorigin?e.credentials="include":"anonymous"===t.crossorigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const o=new class{constructor(){e(this,"SPEED_MULT"),e(this,"ALWAYS_SPAWN"),e(this,"MAX_RES"),e(this,"NOISE_MAGNITUDE"),e(this,"NOISE_FREQUENCY"),e(this,"BLUR_FACTOR"),this.SPEED_MULT=1,this.ALWAYS_SPAWN=!1,this.MAX_RES=1024,this.NOISE_MAGNITUDE=2,this.NOISE_FREQUENCY=.25,this.BLUR_FACTOR=1}},a=n({extensions:"OES_texture_float"}),s=new i;s.add(o,"SPEED_MULT").name("base speed").max(5).min(.25).step(.05),s.add(o,"NOISE_MAGNITUDE").name("noise mag").max(10).min(0).step(.01),s.add(o,"NOISE_FREQUENCY").name("noise frequency").max(1).min(0).step(.01),s.add(o,"MAX_RES").name("max res").max(4096).min(256).step(256),s.add(o,"ALWAYS_SPAWN").name("always spawn"),s.add(o,"BLUR_FACTOR").name("blur factor").max(1).min(0).step(.01);const r={x:0,y:0,buttons:0},l=a._gl.canvas;l.addEventListener("mousemove",(t=>{r.x=t.clientX,r.y=t.clientY,r.buttons=t.buttons})),l.addEventListener("mousedown",(t=>{r.x=t.clientX,r.y=t.clientY,r.buttons=t.buttons})),l.addEventListener("mouseup",(t=>{r.x=t.clientX,r.y=t.clientY,r.buttons=t.buttons})),l.addEventListener("touchmove",(t=>{r.x=t.changedTouches[0].clientX,r.y=t.changedTouches[0].clientY,r.buttons=t.touches.length})),l.addEventListener("touchstart",(t=>{r.x=t.changedTouches[0].clientX,r.y=t.changedTouches[0].clientY,r.buttons=t.touches.length})),l.addEventListener("touchend",(t=>{r.x=t.changedTouches[0].clientX,r.y=t.changedTouches[0].clientY,r.buttons=t.touches.length}));const c=64;let p=64,d=64;const u=Array(16384).fill(0).map((()=>Math.random()>.9?255:0)),m=Array(3).fill().map((()=>a.texture({width:64,height:64,data:u,wrap:"repeat"}))),v=m.map((t=>a.framebuffer({color:t,depthStencil:!1}))),h=a({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n\n    uniform float sshapeX, sshapeY;\n    uniform float blurFac;\n    varying vec2 uv;\n    void main() {\n      vec3 n = vec3(0.0);\n      for(int dx=-1; dx<=1; ++dx)\n      for(int dy=-1; dy<=1; ++dy) {\n        n += texture2D(prevState, uv+vec2(dx,dy)/vec2(sshapeX,sshapeY)).rgb;\n      }\n      vec3 s = texture2D(prevState, uv).rgb;\n      float l=blurFac;\n      vec3 ns=s*(1.0-l)+l*((n-s)/8.0);\n      vec3 col=vec3(max(ns-1.0/255.0,0.0));\n      gl_FragColor = vec4(col,1);\n    }",framebuffer:({tick:t},{outI:e})=>v[e],uniforms:{blurFac:()=>o.BLUR_FACTOR}}),f=a({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n        vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:t},{inI:e})=>v[e],sshapeX:()=>d,sshapeY:()=>p},depth:{enable:!1},count:3}),g=a({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n      vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:t},{inI:e})=>v[e]},depth:{enable:!1},framebuffer:({tick:t},{outI:e})=>v[e],count:3}),y=Array(2).fill().map((()=>a.framebuffer({radius:c,colorType:"float",depthStencil:!1}))),b=a({vert:"\n    precision mediump float;\n    attribute vec2 position;\n    void main () {\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    uniform sampler2D state;\n    uniform sampler2D substrate;\n    uniform float shapeX, shapeY, deltaT, gravity;\n\n    uniform float sshapeX, sshapeY;\n    uniform float speedMult;\n    uniform float noiseSize;\n    uniform float noiseF;\n    float PHI = 1.61803398874989484820459 * 00000.1; // Golden Ratio   \nfloat PI  = 3.14159265358979323846264 * 00000.1; // PI\nfloat SRT = 1.41421356237309504880169 * 10000.0; // Square Root of Two\n\n\nfloat random_0t1(in vec2 coordinate, in float seed)\n{\n    return fract(sin(dot(coordinate*seed, vec2(PHI, PI)))*SRT);\n}\nfloat briC(in vec3 color)\n{\n    return color.x+color.y+color.z;\n}\n    void main () {\n      vec2 res=vec2(sshapeX,sshapeY);\n      vec2 shape = vec2(shapeX, shapeY);\n      vec4 prevState = texture2D(state,\n        gl_FragCoord.xy / shape);\n      vec2 position = (prevState.xy/2.0+0.5)*res;\n      vec2 velocity = prevState.zw;\n      position += 0.5 * velocity * deltaT;\n      if (position.x < 0.0 || position.x > res.x) {\n        velocity.x =-abs(velocity.x)*sign(position.x-res.x/2.0);\n       //position.x =mod(mod(position.x*0.5+0.5,1.0)+1.0,1.0)*2.0-1.0;\n      }\n      if (position.y < 0.0 || position.y > res.y) {\n       velocity.y =-abs(velocity.y)*sign(position.y-res.y/2.0);\n       // position.y =mod(mod(position.y*0.5+0.5,1.0)+1.0,1.0)*2.0-1.0;\n      }\n      vec2 dm=vec2(0.0);\n      float brim=-1.0;\n      float cc=(briC(texture2D(substrate, position/res).rgb));\n      for(int da=-1; da<=1; ++da){\n          float aa=float(da)/6.0*3.1415926535*2.0+atan(velocity.y,velocity.x);\n          vec2 dp=vec2(cos(aa),sin(aa));\n        if(dot(dp,velocity)>=0.0*length(velocity)){\n        float bri=(briC(texture2D(substrate, position/res+(dp*(10.0 )+vec2(0.0,0.0))/res).rgb))+1.0;\n        float rd=mod(mod(random_0t1(position,float(da+20)),1.0)+1.0,1.0);\n        float no=mod(mod(random_0t1(position.yx,float(da+30)),1.0)+1.0,1.0);;\n        if(rd<noiseF)\n        bri*=1.0+no*noiseSize;\n        if(bri>brim){\n        dm=dp;//*bri;//(dp-normalize(velocity))*bri;\n        brim=bri;\n        }\n        }\n    }\n      \n     //velocity.xy=length(velocity)>0.0?normalize(velocity):vec2(0.0);\n     float ddg=length(dm);\n      //velocity.xy+=(dm-normalize(velocity)*dot(normalize(velocity),dm))*(brim)/(cc+brim)*speedMult;//*max(1.0,brim)*0.1;//normalize(dm)*max(ddg,1.0/max(sshapeX,sshapeY))/10.0;\n      float anO=0.05;//+(position.y*0.5+0.5)*0.5;\n      velocity.xy+=anO*normalize(dm)*((brim)/(cc+brim)*2.0+1.0)/2.0*speedMult;//*max(1.0,brim)*0.1;//normalize(dm)*max(ddg,1.0/max(sshapeX,sshapeY))/10.0;\n      velocity.xy*=1.0/(1.0+anO);\n      float an=0.005;//+(position.y*0.5+0.5)*0.5;\n     velocity.xy+=an*(length(velocity)>0.0?normalize(velocity)*speedMult:vec2(0.0));\n     velocity.xy*=1.0/(1.0+an);\n      position += 0.5 * velocity * deltaT;\n     //velocity.y = velocity.y + gravity * deltaT;\n      gl_FragColor = vec4(position.xy/res.xy*2.0-1.0, velocity);\n    }\n    ",depth:{enable:!1},framebuffer:({tick:t},{t:e})=>y[(e+1)%2],uniforms:{state:({tick:t},{t:e})=>y[e%2],substrate:({tick:t})=>v[0],shapeX:a.context("viewportWidth"),shapeY:a.context("viewportHeight"),sshapeX:()=>d,sshapeY:()=>p,speedMult:()=>o.SPEED_MULT,noiseSize:()=>o.NOISE_MAGNITUDE,noiseF:()=>o.NOISE_FREQUENCY,deltaT:1,gravity:0},attributes:{position:[0,-4,4,4,-4,4]},primitive:"triangles",elements:null,offset:0,count:3}),x=a({vert:"\n    precision highp float;\n    attribute vec2 sprite;\n    uniform sampler2D state;\n    uniform float N;\n    varying vec3 rg;\n    uniform float sshapeX, sshapeY;\n    float briC(in vec3 color)\n{\n    return color.x+color.y+color.z;\n}\n    void main () {\n        vec4 sss=texture2D(state, sprite);\n        vec4 sss2=texture2D(state, sprite+vec2(0.0,1.0/N).yx);\n\n        vec4 sss3=texture2D(state, sprite-vec2(0.0,1.0/N).yx);\n      vec2 position =sss.xy;\n      gl_PointSize = 1.0;\n      float gg=((length(sss.zw)-min(length(sss2.zw),min(length(sss.zw),length(sss3.zw))))/\n      max(abs(length(sss3.zw)-length(sss2.zw)),max(abs(length(sss3.zw)-length(sss.zw)),abs(length(sss.zw)-length(sss2.zw))))\n      );\n     float ggy=gg;\n      float a=length(sss.zw)*3.1415926535*2.0;//(ggy-0.5)*10000000.0+0.50+sin(atan(sss.w,sss.z)*2.0)*0.0;//0.5+log(ggy/(1.0-ggy))*0.1;//(length(sss.zw)*max(sshapeX,sshapeY)/20.0)*2.0+sin(atan(sss.w,sss.z)*2.0)*0.0;\n      rg = normalize(vec3(sin(a),sin(a+3.1415926535*2.0/3.0),sin(a+3.1415926535*4.0/3.0))/2.0+0.5);\n      rg=rg/briC(rg);\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    varying vec3 rg;\n    void main () {\n      gl_FragColor = vec4(rg, 1.0);\n    }\n    ",attributes:{sprite:Array(c*c).fill().map((function(t,e){return[e%c/c,(e/c|0)/c]})).reverse()},uniforms:{state:({tick:t},{t:e})=>y[e%2],N:({tick:t},{t:e})=>c,substrate:({tick:t},{inI:e})=>v[e],sshapeX:()=>d,sshapeY:()=>p},primitive:"points",blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one",dstAlpha:"one minus src alpha"}},offset:(t,{count:e})=>c*c-e,elements:null,count:a.prop("count"),framebuffer:({tick:t},{outI:e})=>v[e]});let w=0;const M={data:new Float32Array(256),width:64,height:1},S=document.createElement("div");function T(t,e,n){return Math.min(Math.max(2*n*t/e-1,-.999),.999)}Object.assign(S.style,{color:"white",position:"absolute",left:"20px",top:"20px","z-index":20}),document.body.appendChild(S);let E=[],_=[],I=[],A=[],N=0;(async()=>{const t=new AudioContext;await t.audioWorklet.addModule("data:application/javascript;base64,aW1wb3J0IHsgV2hpdGVOb2lzZVByb2Nlc3NvciB9IGZyb20gIi4vbm9pc2VQcm9jZXNzb3IiOwpyZWdpc3RlclByb2Nlc3Nvcigid2hpdGUtbm9pc2UtcHJvY2Vzc29yIiwgV2hpdGVOb2lzZVByb2Nlc3Nvcik7Cg==");const e=new AudioWorkletNode(t,"white-noise-processor");e.connect(t.destination),e.port.start(),(new Date).getTime(),a.frame((({tick:t,drawingBufferWidth:e,drawingBufferHeight:n,pixelRatio:i})=>{const s=T(r.x,e,i),l=-T(r.y,n,i);let u=Math.max(window.innerWidth*i,window.innerHeight*i),z=Math.ceil(window.innerWidth*i*Math.min(1,o.MAX_RES/u)),D=Math.ceil(window.innerHeight*i*Math.min(1,o.MAX_RES/u));if(z===d&&D===p||(m.forEach(((t,e)=>v[e]({color:t({width:z,height:D})}))),d=z,p=D),r.buttons||o.ALWAYS_SPAWN||N<100){for(let t=0;t<64;++t)M.data[4*t]=s,M.data[4*t+1]=l,M.data[4*t+2]=.25*(Math.random()-.5),M.data[4*t+3]=.25*(Math.random()-.5);y[t%2].color[0].subimage(M,w%c,(w/c|0)%c),w+=64,S.innerText=`${Math.min(w,c*c)}`}for(let o=0;o<2;o++)b({t:N}),a.clear({color:[0,0,0,1],depth:1}),f({inI:0},(()=>{a.draw(),h({outI:1})})),f({inI:1},(()=>{a.draw(),h({outI:0})})),g({inI:1,outI:0},(()=>{a.draw(),x({t:N,outI:0,inI:1,count:Math.min(w,c*c)})})),N+=1,N%2==0&&a({framebuffer:y[0]})((()=>{const t=[...a.read().values()],e=new Array(t.length/4).fill(0).map(((t,e)=>e)).filter((e=>Number.isFinite(t[4*e]))).map((e=>[t[4*e],t[4*e+1],t[4*e+2],t[4*e+3]]));if(_=E.slice(),E=e,E.length>1&&_.length>1){(new Date).getTime();let t=E.map(((t,e)=>{var n,i,o,a;const s=null!=(n=_[e])?n:t,r=(null!=(i=null==I?void 0:I[e])?i:[0,s,{lastTurnTime:N,plastTurnTime:N,lastTurn:[1,0],turnCycle:0,turnDur:[]}])[2],l=t,c=Math.pow(l[3]**2+l[2]**2,.5),u=Math.pow(s[3]**2+s[2]**2,.5),m=Math.abs(Math.acos((l[3]*s[3]+l[2]*s[2])/c/u))*Math.sign(l[2]*s[3]-l[3]*s[2]),v=Math.pow(((s[0]-l[0])*d)**2+((s[1]-l[1])*p)**2,.5);null==(o=null==I?void 0:I[e])||o[0];let h=v/Math.sqrt(1-Math.pow((l[3]*s[3]+l[2]*s[2])/c/u,2));Math.sign(l[2]*s[3]-l[3]*s[2]),r.lastTurn[0],l[2],r.lastTurn[1],l[3];let f=r.lastTurnTime,g=r.plastTurnTime,y=r.lastTurn,b=.5*r.turnCycle+.5*m,x=r.turnDur;x.push(Math.abs(1/h)),x=x.slice(-5);const w=Math.pow(2,Math.log2(1/(x.reduce(((t,e)=>t+e),0)/x.length))/2);return[null!=(a=Math.max(Math.min(110*w/4,3520),-3520))?a:0,l,{lastTurnTime:f,plastTurnTime:g,lastTurn:y,turnCycle:b,turnDur:x}]}));I=t,t.sort(((t,e)=>t[0]-e[0]));const e=Math.min(t.length,6);A=new Array(e).fill(0).map(((n,i)=>{const o=t[Math.floor((i+.5)*((t.length-1)/e))];return[o,o[0]]}))}}))})),window.setInterval((()=>{e.port.postMessage({p:A,d:1,t:N}),window.mm=A.map((t=>t[1]))}),1e3/44100*128*2)})();
