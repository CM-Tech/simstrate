import{r as e,m as t}from"./vendor.7f134ff5.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const n=e({extensions:"OES_texture_float",pixelRatio:1}),i=t(),o=1024;let a=64,r=64;const s=Array(16384).fill(0).map((()=>Math.random()>.9?255:0)),l=Array(3).fill().map((()=>n.texture({width:64,height:64,data:s,wrap:"repeat"}))),c=l.map((e=>n.framebuffer({color:e,depthStencil:!1}))),p=n({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n\n    uniform float sshapeX, sshapeY;\n    varying vec2 uv;\n    void main() {\n      vec3 n = vec3(0.0);\n      for(int dx=-1; dx<=1; ++dx)\n      for(int dy=-1; dy<=1; ++dy) {\n        n += texture2D(prevState, uv+vec2(dx,dy)/vec2(sshapeX,sshapeY)).rgb;\n      }\n      vec3 s = texture2D(prevState, uv).rgb;\n      float l=1.0;\n      vec3 ns=s*(1.0-l)+l*(n/9.0);\n      vec3 col=vec3(max(ns*0.995,0.0));\n      gl_FragColor = vec4(col,1);\n    }",framebuffer:({tick:e},{outI:t})=>c[t]}),v=n({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n        vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:e},{inI:t})=>c[t],sshapeX:()=>r,sshapeY:()=>a},depth:{enable:!1},count:3}),d=n({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n      vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:e},{inI:t})=>c[t]},depth:{enable:!1},framebuffer:({tick:e},{outI:t})=>c[t],count:3}),f=Array(2).fill().map((()=>n.framebuffer({radius:o,colorType:"float",depthStencil:!1}))),u=n({vert:"\n    precision mediump float;\n    attribute vec2 position;\n    void main () {\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    uniform sampler2D state;\n    uniform sampler2D substrate;\n    uniform float shapeX, shapeY, deltaT, gravity;\n\n    uniform float sshapeX, sshapeY;\n    void main () {\n      vec2 shape = vec2(shapeX, shapeY);\n      vec4 prevState = texture2D(state,\n        gl_FragCoord.xy / shape);\n      vec2 position = prevState.xy;\n      vec2 velocity = prevState.zw;\n      position += 0.5 * velocity * deltaT;\n      if (position.x < -1.0 || position.x > 1.0) {\n        velocity.x *= -1.0;\n      }\n      if (position.y < -1.0 || position.y > 1.0) {\n        velocity.y *= -1.0;\n      }\n      vec2 dm=vec2(0.0);\n      float brim=-1.0;\n      for(int da=-3; da<=3; ++da){\n          float aa=float(da)/7.0*3.1415926535*2.0+atan(velocity.y,velocity.x);\n          vec2 dp=vec2(cos(aa),sin(aa));\n        if(dot(dp,velocity)>=0.0*length(velocity)){\n        float bri=length(texture2D(substrate, position/2.0+0.5+(dp*10.0+vec2(0.0,0.0))/vec2(sshapeX,sshapeY)).rgb)+\n        0.0*(sin(mod(position.x,sin(position.y*1000.0)*0.01)*100000.0)/2.0+0.5);//*dot(dp,velocity);\n        if(bri>brim){\n        dm=dp*bri/max(sshapeX,sshapeY);\n        brim=bri;\n        }\n        }\n    }\n      \n     //velocity.xy=length(velocity)>0.0?normalize(velocity):vec2(0.0);\n     float ddg=length(dm);\n      velocity.xy+=dm*max(1.0,brim)*0.05;//normalize(dm)*max(ddg,1.0/max(sshapeX,sshapeY))/10.0;\n      //velocity.xy*=0.95;\n      float an=0.1;\n     velocity.xy+=an*(length(velocity)>0.0?normalize(velocity)/max(sshapeX,sshapeY):vec2(0.0));\n     velocity.xy*=1.0/(1.0+an);\n      position += 0.5 * velocity * deltaT;\n     // velocity.y = velocity.y + gravity * deltaT;\n      gl_FragColor = vec4(position, velocity);\n    }\n    ",depth:{enable:!1},framebuffer:({tick:e},{t:t})=>f[(t+1)%2],uniforms:{state:({tick:e},{t:t})=>f[t%2],substrate:({tick:e})=>c[0],shapeX:n.context("viewportWidth"),shapeY:n.context("viewportHeight"),sshapeX:()=>r,sshapeY:()=>a,deltaT:1,gravity:-.5},attributes:{position:[0,-4,4,4,-4,4]},primitive:"triangles",elements:null,offset:0,count:3}),m=n({vert:"\n    precision highp float;\n    attribute vec2 sprite;\n    uniform sampler2D state;\n    varying vec3 rg;\n    void main () {\n        vec4 sss=texture2D(state, sprite);\n      vec2 position =sss.xy;\n      gl_PointSize = 1.0;\n      float a=atan(sss.w,sss.z)*2.0;\n      rg = vec3(sin(a),sin(a+3.1415926535*2.0/3.0),sin(a+3.1415926535*4.0/3.0))/2.0+0.5;\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    varying vec3 rg;\n    void main () {\n      gl_FragColor = vec4(rg, 0.5);\n    }\n    ",attributes:{sprite:Array(o*o).fill().map((function(e,t){return[t%o/o,(t/o|0)/o]})).reverse()},uniforms:{state:({tick:e},{t:t})=>f[t%2],substrate:({tick:e},{inI:t})=>c[t]},primitive:"points",blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one",dstAlpha:"one minus src alpha"}},offset:(e,{count:t})=>o*o-t,elements:null,count:n.prop("count"),framebuffer:({tick:e},{outI:t})=>c[t]});let h=0;const g={data:new Float32Array(256),width:64,height:1},y=document.createElement("div");function b(e,t,n){return Math.min(Math.max(2*n*e/t-1,-.999),.999)}Object.assign(y.style,{color:"white",position:"absolute",left:"20px",top:"20px","z-index":20}),document.body.appendChild(y);let x=0;n.frame((({tick:e,drawingBufferWidth:t,drawingBufferHeight:s,pixelRatio:w})=>{const S=b(i.x,t,w),I=-b(i.y,s,w);if(window.innerHeight!==a||window.innerWidth!==r){let e=window.innerWidth,t=window.innerHeight;l.forEach(((n,i)=>c[i]({color:n({width:e,height:t})}))),r=e,a=t}if(i.buttons){for(let e=0;e<64;++e)g.data[4*e]=S,g.data[4*e+1]=I,g.data[4*e+2]=.25*(Math.random()-.5),g.data[4*e+3]=.25*(Math.random()-.5);f[e%2].color[0].subimage(g,h%o,(h/o|0)%o),h+=64,y.innerText=Math.min(h,o*o)}for(let i=0;i<20;i++)u({t:x}),n.clear({color:[0,0,0,1],depth:1}),v({inI:0},(()=>{n.draw(),p({outI:1})})),v({inI:1},(()=>{n.draw(),p({outI:0})})),d({inI:1,outI:0},(()=>{n.draw(),m({t:x,outI:0,inI:1,count:Math.min(h,o*o)})})),x+=1}));
