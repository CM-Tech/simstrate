var e=Object.defineProperty,t=(t,n,i)=>(((t,n,i)=>{n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[n]=i})(t,"symbol"!=typeof n?n+"":n,i),i);import{r as n,G as i}from"./vendor.518f2100.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const o=new class{constructor(){t(this,"SPEED_MULT"),t(this,"ALWAYS_SPAWN"),t(this,"MAX_RES"),t(this,"NOISE_MAGNITUDE"),t(this,"NOISE_FREQUENCY"),this.SPEED_MULT=.5,this.ALWAYS_SPAWN=!1,this.MAX_RES=1024,this.NOISE_MAGNITUDE=2,this.NOISE_FREQUENCY=.25}},s=n({extensions:"OES_texture_float"}),a=new i;a.add(o,"SPEED_MULT").name("base speed").max(5).min(.25).step(.05),a.add(o,"NOISE_MAGNITUDE").name("noise mag").max(10).min(0).step(.01),a.add(o,"NOISE_FREQUENCY").name("noise frequency").max(1).min(0).step(.01),a.add(o,"MAX_RES").name("max res").max(4096).min(256).step(256),a.add(o,"ALWAYS_SPAWN").name("always spawn");const r={x:0,y:0,buttons:0};window.addEventListener("mousemove",(e=>{r.x=e.clientX,r.y=e.clientY,r.buttons=e.buttons})),window.addEventListener("mousedown",(e=>{r.x=e.clientX,r.y=e.clientY,r.buttons=e.buttons})),window.addEventListener("mouseup",(e=>{r.x=e.clientX,r.y=e.clientY,r.buttons=e.buttons})),window.addEventListener("touchmove",(e=>{r.x=e.changedTouches[0].clientX,r.y=e.changedTouches[0].clientY,r.buttons=e.touches.length})),window.addEventListener("touchstart",(e=>{r.x=e.changedTouches[0].clientX,r.y=e.changedTouches[0].clientY,r.buttons=e.touches.length})),window.addEventListener("touchend",(e=>{r.x=e.changedTouches[0].clientX,r.y=e.changedTouches[0].clientY,r.buttons=e.touches.length}));const l=64;let c=64,d=64;const p=Array(16384).fill(0).map((()=>Math.random()>.9?255:0)),u=Array(3).fill().map((()=>s.texture({width:64,height:64,data:p,wrap:"repeat"}))),m=u.map((e=>s.framebuffer({color:e,depthStencil:!1}))),v=s({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n\n    uniform float sshapeX, sshapeY;\n    varying vec2 uv;\n    void main() {\n      vec3 n = vec3(0.0);\n      for(int dx=-1; dx<=1; ++dx)\n      for(int dy=-1; dy<=1; ++dy) {\n        n += texture2D(prevState, uv+vec2(dx,dy)/vec2(sshapeX,sshapeY)).rgb;\n      }\n      vec3 s = texture2D(prevState, uv).rgb;\n      float l=0.1;\n      vec3 ns=s*(1.0-l)+l*(n/9.0);\n      vec3 col=vec3(max(ns-1.0/255.0,0.0));\n      gl_FragColor = vec4(col,1);\n    }",framebuffer:({tick:e},{outI:t})=>m[t]}),h=s({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n        vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:e},{inI:t})=>m[t],sshapeX:()=>d,sshapeY:()=>c},depth:{enable:!1},count:3}),f=s({frag:"\n    precision mediump float;\n    uniform sampler2D prevState;\n    varying vec2 uv;\n    void main() {\n      vec3 state = texture2D(prevState, uv).rgb;\n      gl_FragColor = vec4(vec3(state), 1);\n    }",vert:"\n    precision mediump float;\n    attribute vec2 position;\n    varying vec2 uv;\n    void main() {\n      uv = 0.5 * (position + 1.0);\n      gl_Position = vec4(position, 0, 1);\n    }",attributes:{position:[-4,-4,4,-4,0,4]},uniforms:{prevState:({tick:e},{inI:t})=>m[t]},depth:{enable:!1},framebuffer:({tick:e},{outI:t})=>m[t],count:3}),g=Array(2).fill().map((()=>s.framebuffer({radius:l,colorType:"float",depthStencil:!1}))),y=s({vert:"\n    precision mediump float;\n    attribute vec2 position;\n    void main () {\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    uniform sampler2D state;\n    uniform sampler2D substrate;\n    uniform float shapeX, shapeY, deltaT, gravity;\n\n    uniform float sshapeX, sshapeY;\n    uniform float speedMult;\n    uniform float noiseSize;\n    uniform float noiseF;\n    float PHI = 1.61803398874989484820459 * 00000.1; // Golden Ratio   \nfloat PI  = 3.14159265358979323846264 * 00000.1; // PI\nfloat SRT = 1.41421356237309504880169 * 10000.0; // Square Root of Two\n\n\nfloat random_0t1(in vec2 coordinate, in float seed)\n{\n    return fract(sin(dot(coordinate*seed, vec2(PHI, PI)))*SRT);\n}\n    void main () {\n      vec2 res=vec2(sshapeX,sshapeY);\n      vec2 shape = vec2(shapeX, shapeY);\n      vec4 prevState = texture2D(state,\n        gl_FragCoord.xy / shape);\n      vec2 position = (prevState.xy/2.0+0.5)*res;\n      vec2 velocity = prevState.zw;\n      position += 0.5 * velocity * deltaT;\n      if (position.x < 0.0 || position.x > res.x) {\n        velocity.x =-abs(velocity.x)*sign(position.x-res.x/2.0);\n       //position.x =mod(mod(position.x*0.5+0.5,1.0)+1.0,1.0)*2.0-1.0;\n      }\n      if (position.y < 0.0 || position.y > res.y) {\n       velocity.y =-abs(velocity.y)*sign(position.y-res.y/2.0);\n       // position.y =mod(mod(position.y*0.5+0.5,1.0)+1.0,1.0)*2.0-1.0;\n      }\n      vec2 dm=vec2(0.0);\n      float brim=-1.0;\n      for(int da=-1; da<=1; ++da){\n          float aa=float(da)/6.0*3.1415926535*2.0+atan(velocity.y,velocity.x);\n          vec2 dp=vec2(cos(aa),sin(aa));\n        if(dot(dp,velocity)>=0.0*length(velocity)){\n        float bri=(length(texture2D(substrate, position/res+(dp*(10.0 )+vec2(0.0,0.0))/res).rgb));\n        float rd=mod(mod(random_0t1(position,float(da+20)),1.0)+1.0,1.0);\n        float no=mod(mod(random_0t1(position.yx,float(da+30)),1.0)+1.0,1.0);;\n        if(rd<noiseF)\n        bri+=no*noiseSize;\n        if(bri>brim){\n        dm=dp;//*bri;//(dp-normalize(velocity))*bri;\n        brim=bri;\n        }\n        }\n    }\n      \n     //velocity.xy=length(velocity)>0.0?normalize(velocity):vec2(0.0);\n     float ddg=length(dm);\n      velocity.xy+=(dm-normalize(velocity)*dot(normalize(velocity),dm))*0.1;//*max(1.0,brim)*0.1;//normalize(dm)*max(ddg,1.0/max(sshapeX,sshapeY))/10.0;\n      //velocity.xy*=0.95;\n      float an=0.005;//+(position.y*0.5+0.5)*0.5;\n     velocity.xy+=an*(length(velocity)>0.0?normalize(velocity)*speedMult:vec2(0.0));\n     velocity.xy*=1.0/(1.0+an);\n      position += 0.5 * velocity * deltaT;\n     //velocity.y = velocity.y + gravity * deltaT;\n      gl_FragColor = vec4(position.xy/res.xy*2.0-1.0, velocity);\n    }\n    ",depth:{enable:!1},framebuffer:({tick:e},{t:t})=>g[(t+1)%2],uniforms:{state:({tick:e},{t:t})=>g[t%2],substrate:({tick:e})=>m[0],shapeX:s.context("viewportWidth"),shapeY:s.context("viewportHeight"),sshapeX:()=>d,sshapeY:()=>c,speedMult:()=>o.SPEED_MULT,noiseSize:()=>o.NOISE_MAGNITUDE,noiseF:()=>o.NOISE_FREQUENCY,deltaT:1,gravity:0},attributes:{position:[0,-4,4,4,-4,4]},primitive:"triangles",elements:null,offset:0,count:3}),b=s({vert:"\n    precision highp float;\n    attribute vec2 sprite;\n    uniform sampler2D state;\n    uniform float N;\n    varying vec3 rg;\n    uniform float sshapeX, sshapeY;\n    void main () {\n        vec4 sss=texture2D(state, sprite);\n        vec4 sss2=texture2D(state, sprite+vec2(0.0,1.0/N).yx);\n\n        vec4 sss3=texture2D(state, sprite-vec2(0.0,1.0/N).yx);\n      vec2 position =sss.xy;\n      gl_PointSize = 1.0;\n      float gg=((length(sss.zw)-min(length(sss2.zw),min(length(sss.zw),length(sss3.zw))))/\n      max(abs(length(sss3.zw)-length(sss2.zw)),max(abs(length(sss3.zw)-length(sss.zw)),abs(length(sss.zw)-length(sss2.zw))))\n      );\n     float ggy=gg;\n      float a=length(sss.zw)*3.1415926535*2.0;//(ggy-0.5)*10000000.0+0.50+sin(atan(sss.w,sss.z)*2.0)*0.0;//0.5+log(ggy/(1.0-ggy))*0.1;//(length(sss.zw)*max(sshapeX,sshapeY)/20.0)*2.0+sin(atan(sss.w,sss.z)*2.0)*0.0;\n      rg = normalize(vec3(sin(a),sin(a+3.1415926535*2.0/3.0),sin(a+3.1415926535*4.0/3.0))/2.0+0.5);\n      gl_Position = vec4(position, 0, 1);\n    }\n    ",frag:"\n    precision highp float;\n    varying vec3 rg;\n    void main () {\n      gl_FragColor = vec4(rg, 1.0);\n    }\n    ",attributes:{sprite:Array(l*l).fill().map((function(e,t){return[t%l/l,(t/l|0)/l]})).reverse()},uniforms:{state:({tick:e},{t:t})=>g[t%2],N:({tick:e},{t:t})=>l,substrate:({tick:e},{inI:t})=>m[t],sshapeX:()=>d,sshapeY:()=>c},primitive:"points",blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:"src alpha",dstRGB:"one",dstAlpha:"one minus src alpha"}},offset:(e,{count:t})=>l*l-t,elements:null,count:s.prop("count"),framebuffer:({tick:e},{outI:t})=>m[t]});let w=0;const x={data:new Float32Array(256),width:64,height:1},S=document.createElement("div");function E(e,t,n){return Math.min(Math.max(2*n*e/t-1,-.999),.999)}Object.assign(S.style,{color:"white",position:"absolute",left:"20px",top:"20px","z-index":20}),document.body.appendChild(S);let M=[],_=[],A=[],I=[],N=0;(async()=>{const e=new AudioContext;await e.audioWorklet.addModule("noise-processor.js");const t=new AudioWorkletNode(e,"white-noise-processor");t.connect(e.destination),t.port.start();let n=(new Date).getTime();s.frame((({tick:e,drawingBufferWidth:t,drawingBufferHeight:i,pixelRatio:a})=>{const p=E(r.x,t,a),z=-E(r.y,i,a);let Y=Math.max(window.innerWidth*a,window.innerHeight*a),T=Math.ceil(window.innerWidth*a*Math.min(1,o.MAX_RES/Y)),D=Math.ceil(window.innerHeight*a*Math.min(1,o.MAX_RES/Y));if(T===d&&D===c||(u.forEach(((e,t)=>m[t]({color:e({width:T,height:D})}))),d=T,c=D),r.buttons||o.ALWAYS_SPAWN||N<100){for(let e=0;e<64;++e)x.data[4*e]=p,x.data[4*e+1]=z,x.data[4*e+2]=.25*(Math.random()-.5),x.data[4*e+3]=.25*(Math.random()-.5);g[e%2].color[0].subimage(x,w%l,(w/l|0)%l),w+=64,S.innerText=`${Math.min(w,l*l)}`}for(let o=0;o<2;o++)y({t:N}),s.clear({color:[0,0,0,1],depth:1}),h({inI:0},(()=>{s.draw(),v({outI:1})})),h({inI:1},(()=>{s.draw(),v({outI:0})})),f({inI:1,outI:0},(()=>{s.draw(),b({t:N,outI:0,inI:1,count:Math.min(w,l*l)})})),N+=1,N%10==0&&s({framebuffer:g[0]})((()=>{const e=[...s.read().values()],t=new Array(e.length/4).fill(0).map(((e,t)=>t)).filter((t=>Number.isFinite(e[4*t]))).map((t=>[e[4*t],e[4*t+1],e[4*t+2],e[4*t+3]]));if(_=M.slice(),M=t,M.length>1&&_.length>1){let e=(new Date).getTime(),t=Math.max(e-n,1);n=e;let i=M.map(((e,n)=>{var i,o,s,a;const r=null!=(i=_[n])?i:e,l=e;r.includes(NaN)&&console.log(l,r),Math.pow(l[3]**2+l[2]**2,.5),Math.pow(r[3]**2+r[2]**2,.5);const p=Math.pow(((r[0]-l[0])*d)**2+((r[1]-l[1])*c)**2,.5);let u=null!=(s=null==(o=null==A?void 0:A[n])?void 0:o[0])?s:0;Number.isFinite(u)||(u=0);let m=p/(t/1e3)*Math.sign(l[2]*r[3]-l[3]*r[2]);return[null!=(a=Math.max(Math.min(.5*m+.5*u,1e3),-1e3))?a:0,l]}));A=i,i.sort(((e,t)=>e[0]-t[0]));const o=Math.min(i.length,64);I=new Array(o).fill(0).map(((e,t)=>{const n=i[Math.floor((t+.5)*((i.length-1)/o))];return[n,440*Math.atan(Math.abs(n[0])/440/2)*2+110]}))}}))})),window.setInterval((()=>{t.port.postMessage({p:I,d:1}),window.mm=I.map((e=>e[1]))}),1e3/44100*128*2)})();
